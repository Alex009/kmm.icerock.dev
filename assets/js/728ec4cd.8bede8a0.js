(self.webpackChunkkmm_icerock_dev=self.webpackChunkkmm_icerock_dev||[]).push([[7221],{3905:function(t,e,i){"use strict";i.d(e,{Zo:function(){return c},kt:function(){return d}});var r=i(7294);function o(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function a(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,r)}return i}function n(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?a(Object(i),!0).forEach((function(e){o(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function l(t,e){if(null==t)return{};var i,r,o=function(t,e){if(null==t)return{};var i,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)i=a[r],e.indexOf(i)>=0||(o[i]=t[i]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)i=a[r],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(o[i]=t[i])}return o}var p=r.createContext({}),m=function(t){var e=r.useContext(p),i=e;return t&&(i="function"==typeof t?t(e):n(n({},e),t)),i},c=function(t){var e=m(t.components);return r.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var i=t.components,o=t.mdxType,a=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),u=m(i),d=o,f=u["".concat(p,".").concat(d)]||u[d]||s[d]||a;return i?r.createElement(f,n(n({ref:e},c),{},{components:i})):r.createElement(f,n({ref:e},c))}));function d(t,e){var i=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=i.length,n=new Array(a);n[0]=u;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:o,n[1]=l;for(var m=2;m<a;m++)n[m]=i[m];return r.createElement.apply(null,n)}return r.createElement.apply(null,i)}u.displayName="MDXCreateElement"},8073:function(t,e,i){"use strict";i.r(e),i.d(e,{frontMatter:function(){return n},metadata:function(){return l},toc:function(){return p},default:function(){return c}});var r=i(2122),o=i(9756),a=(i(7294),i(3905)),n={sidebar_position:8},l={unversionedId:"code",id:"code",isDocsHomePage:!1,title:"\u041f\u0440\u0438\u043c\u0435\u0440\u044b",description:"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",source:"@site/docs/code.md",sourceDirName:".",slug:"/code",permalink:"/docs/code",editUrl:"https://github.com/icerockdev/kmm.icerock.dev/tree/docusaurus/docs/code.md",version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"FAQ",permalink:"/docs/faq"},next:{title:"\u0422\u0435\u0440\u043c\u0438\u043d\u043e\u043b\u043e\u0433\u0438\u044f",permalink:"/docs/terminology"}},p=[{value:"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",id:"\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",children:[]},{value:"Gradle \u041f\u043b\u0430\u0433\u0438\u043d\u044b",id:"gradle-\u043f\u043b\u0430\u0433\u0438\u043d\u044b",children:[]},{value:"\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438",id:"\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438",children:[]},{value:"\u0421\u043d\u0438\u043f\u043f\u0435\u0442\u044b",id:"\u0441\u043d\u0438\u043f\u043f\u0435\u0442\u044b",children:[{value:"Set own minimal iOS version for Kotlin/Native",id:"set-own-minimal-ios-version-for-kotlinnative",children:[]}]}],m={toc:p};function c(t){var e=t.components,i=(0,o.Z)(t,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},m,i,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"},"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/JetBrains/kotlinconf-app"},"JetBrains/kotlinconf-app")," - official KotlinConf application - backend, android, ios with shared code;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Kotlin/mpp-example"},"Kotlin/mpp-example")," - official Multiplatform (android + ios) sample from JetBrains;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/JetBrains/KotlinFinder"},"JetBrains/KotlinFinder")," - official KotlinFinder application from JetBrains and IceRock for KotlinConf 2019 (android + ios)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/touchlab/DroidconKotlin"},"touchlab/DroidconKotlin")," - DroidCon conference application from TouchLab (android + ios);"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/SimonSchubert/Newsout"},"SimonSchubert/Newsout")," - News application sample (android + ios) using database;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/sergiocasero/votlin-app"},"sergiocasero/votlin-app")," - all-platforms conference application - backend, android, ios, frontend with shared code;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/adrianbukros/github-multiplatform-example"},"adrianbukros/github-multiplatform-example")," - simple example of mobile application (android + ios) using kodein for DI and Timber for logging."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/cmota/commit19"},"cmota/commit19")," - conference application (android + ios);"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/cmota/droidconLX"},"cmota/droidconLX")," - DroidCon conference application (android + ios) with database;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/wiyarmir/kotlin-multiplatform-mobile-template"},"wiyarmir/kotlin-multiplatform-mobile-template")," - project template of multiplatform project;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/webfactorymk/kotlin-multiplatform-currency-converter"},"webfactorymk/kotlin-multiplatform-currency-converter")," - mobile project sample with multimodular approach;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/russhwolf/multiplatform-hello"},"russhwolf/multiplatform-hello")," - mobile platforms, backend, testing;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/jarroyoesp/KotlinMultiPlatform"},"jarroyoesp/KotlinMultiPlatform")," - android, ios, web app, desktop jvm app, ktor, serialization, sqldelight, mockk;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Karumi/KotlinMultiplatformApp"},"Karumi/KotlinMultiplatformApp")," - android, ios, ktor, coroutines, serialization, detekt, ktlint;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/jeremyrempel/gitnotes"},"jeremyrempel/gitnotes")," - network, mobile;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/petrumo/KotlinMultiplatformMVI"},"petrumo/KotlinMultiplatformMVI")," - mvi mobile, android, ios;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/felipehjcosta/chat-app"},"felipehjcosta/chat-app")," - Chat Multiplatform from Felipe Costa for Web, Android and iOS (Kotlin 1.3.61, common lib is using on android, ios, frontend (based on React but using Kotlin), a shared code between backend and client common lib, tests is in common lib);"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/joreilly/PeopleInSpace"},"joreilly/PeopleInSpace")," - Minimal Kotlin Multiplatform project using Jetpack Compose and SwiftUI (now also includes WatchOS version!) ;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/kommentaire/kommentaire-app"},"kommentaire/kommentaire-app")," - backend, android, ios, jetpack compose, swiftui, graphql;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/jshvarts/KmpGithubMVVM"},"jshvarts/KmpGithubMVVM")," - android, ios, mvvm, sqldelight, cocoapods;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/hotmule/Lastik"},"hotmule/Lastik")," - android, desktop, jetpack compose, multimodule;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Shabinder/SpotiFlyer"},"Shabinder/SpotiFlyer")," - android, desktop, jetpack compose, web, react, windows, linux;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/abhishekdewan101/Scout"},"abhishekdewan101/Scout")," - android, ios, sqldelight;")),(0,a.kt)("h2",{id:"gradle-\u043f\u043b\u0430\u0433\u0438\u043d\u044b"},"Gradle \u041f\u043b\u0430\u0433\u0438\u043d\u044b"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/prof18/kmp-fatframework-cocoa"},"prof18/kmp-fatframework-cocoa")," - A Gradle plugin to generate and publish an iOs FatFramework on Kotlin Multiplatform projects;")),(0,a.kt)("h2",{id:"\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438"},"\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://libs.kmp.icerock.dev"},"http://libs.kmp.icerock.dev")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.kamp.ml"},"https://www.kamp.ml")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/AAkira/Kotlin-Multiplatform-Libraries"},"AAkira/Kotlin-Multiplatform-Libraries"))),(0,a.kt)("h2",{id:"\u0441\u043d\u0438\u043f\u043f\u0435\u0442\u044b"},"\u0421\u043d\u0438\u043f\u043f\u0435\u0442\u044b"),(0,a.kt)("h3",{id:"set-own-minimal-ios-version-for-kotlinnative"},"Set own minimal iOS version for Kotlin/Native"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},'compilations.all {\n    kotlinOptions.freeCompilerArgs += "-Xoverride-konan-properties=osVersionMin.ios_x64=13.0;osVersionMin.ios_arm64=13.0"\n}\n')))}c.isMDXComponent=!0}}]);